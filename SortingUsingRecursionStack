#include <stdio.h>
#include <stdlib.h>
using namespace std;

struct Stack
{
    int top;
    int capacity;
    int *arr;
};

struct Stack* createStack(int capacity)
{
    struct Stack* stack=(struct Stack*)malloc(sizeof(struct Stack));
    stack->capacity=capacity;
    stack->top=-1;
    stack->arr=(int*)malloc(stack->capacity*sizeof(int));
    return stack;
}
void Push(struct Stack* stack, int value)
{
    stack->arr[++stack->top]=value;
    printf("%d value is pushed in stack\n",value);
}
void Print(struct Stack* stack)
{
    int i=stack->capacity;
    while(i>0)
    {
        printf("%d ",stack->arr[i-1]);
        i=i-1;
    }
}
int IsEmpty(struct Stack* stack)
{
    if(stack->top==-1)
        return 1;
    else
        return 0;
}
int Pop(struct Stack* stack)
{
    if(IsEmpty(stack))
        return -1;
    return stack->arr[stack->top--];
}

int Sort(struct Stack* stack, int k, int com)
{
    int min;
    //printf("%d\n",stack->top);
    if(k==com)
        return Pop(stack);
    min= Sort(stack,k-1,com);
    printf("%d ",min);
    int x=Pop(stack);
    if(min>x)
        return x;
    else
        return min;
}
int main() {
    int value=5;
    struct Stack* stack=createStack(value);
    Push(stack,30);
    Push(stack,-5);
    Push(stack,18);
    Push(stack,14);
    Push(stack,-3);
    printf("Before Sorting\n");
    Print(stack);
    printf("\n");
    //printf("%d ",Pop(stack));
    printf("After Sorting\n");
    int j;
    int z=value-1;
    for(int a=0;a<z;a++)
    {
        j=Sort(stack,z,a);
        printf("%d\n",j);
        Push(stack,j);
        stack->top=z;
    }
    //Print(stack);
	// your code goes here
	return 0;
}
